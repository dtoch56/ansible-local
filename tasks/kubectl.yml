# kubectl - command line tool to control Kubernetes clusters
# https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
---
- name: kubectl | Get latest release
  ansible.builtin.uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: true
  register: kubectl_latest_release
  when: kubectl_required_version is not defined

- name: kubctl | Set variables
  ansible.builtin.set_fact:
    kubectl_required_version: "{{ kubectl_latest_release.content | trim }}"
  when: kubectl_latest_release is not skipped

- name: kubectl | Check current version
  ansible.builtin.shell: /usr/local/bin/kubectl version --client=true -o json
  register: kubectl_version
  failed_when:
    - kubectl_version.rc != 0
    - '"kubectl: not found" not in kubectl_version.stderr'

- name: kubectl | Set variables
  ansible.builtin.set_fact:
    kubectl_current_version: "{{ '' if kubectl_version.stdout == '' else (kubectl_version.stdout|from_json).clientVersion.gitVersion }}"

- name: kubectl | Install block
  when:
    - kubectl_required_version != kubectl_current_version
  block:
    - name: kubectl | Get checksum
      ansible.builtin.uri:
        url: "https://dl.k8s.io/{{ kubectl_required_version }}/bin/linux/{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}/kubectl.sha256"
        return_content: true
        force: true
      register: checksum

    - name: "kubectl | Download release {{ kubectl_required_version }}"
      ansible.builtin.get_url:
        url: "https://dl.k8s.io/release/{{ kubectl_required_version }}/bin/linux/{{ 'amd64' if ansible_architecture == 'x86_64' else ansible_architecture }}/kubectl"
        dest: /tmp/kubectl
        mode: '0700'
        checksum: "sha256:{{ checksum.content }}"
        force: true

    - name: kubectl | Install kubectl
      ansible.builtin.shell: install -o root -g root -m 0755 /tmp/kubectl /usr/local/bin/kubectl
      become: true

    - name: kubectl | kubectl bash-completion
      ansible.builtin.shell:
        cmd: kubectl completion bash > /etc/bash_completion.d/kubectl
      become: true

    - name: kubectl | Remove kubectl installation file
      ansible.builtin.file:
        path: /tmp/kubectl
        state: absent

# kubecolor - Colorize your kubectl output
- name: kubectl | Get latest release of kubecolor
  community.general.github_release:
    user: hidetatz
    repo: kubecolor
    action: latest_release
  register: latest_kubecolor

- name: "kubectl | Installing kubecolor {{ latest_kubecolor.tag }}"
  ansible.builtin.unarchive:
    src: "https://github.com/hidetatz/kubecolor/releases/download/{{ latest_kubecolor.tag }}/kubecolor_{{ latest_kubecolor.tag | replace('v', '') }}_Linux_{{ ansible_architecture }}.tar.gz"
    include: kubecolor
    dest: /usr/local/bin
    mode: 0755
    remote_src: true
  become: true

- name: kubectl | bash aliases and completion
  when: bashrc
  block:
    - name: kubectl | bash alias for kubecolor
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: alias k=kubecolor

    - name: kubectl | bash completion for alias of kubecolor
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: complete -o bashdefault -o default -o nospace -F __start_kubectl k

- name: kubectl | zsh aliases and completion
  when: zshrc
  block:
    - name: kubectl | zsh alias for kubecolor
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        line: alias k=kubecolor

    - name: kubectl | zsh completion for alias of kubecolor
      ansible.builtin.lineinfile:
        path: ~/.zshrc
        line: source <(kubectl completion zsh)

#     - name: kubectl | bash completion for alias of kubecolor
#       ansible.builtin.lineinfile:
#         path: ~/.bashrc
#         line: complete -o bashdefault -o default -o nospace -F __start_kubectl k
